# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

<%
 require Rails.root.join('app/helpers/application_helper')
%>


setCountItems = (quantity)->
  data_count = $('label#basket').attr('data-count')
  quantity = +quantity
  data_count_sum = +data_count + quantity
  $('label#basket').attr('data-count', data_count_sum)

$(document).ready ->

 # add tablecloth to cart
  $('#form_add_to_cart button').click (e) ->
    e.preventDefault()

    $currentElement = $(this)
    parent = $(this).closest('form')
    count = parent.find("input.count_product").val()

    attrRenderID = $(this).attr('data-product-id')
    itemToRemove = parent.find('.quantity-items-wrap')
    itemToAdd = $(this).parent()

    if $currentElement.hasClass("is-drink-set")
      valuesToSubmit = {drink_set_id: attrRenderID, ds_quantity: count}
    else if $currentElement.hasClass("is-decor")
      valuesToSubmit = {decor_id: attrRenderID, d_quantity: count}
    else if $currentElement.hasClass("is-tablecloth")
      valuesToSubmit = {product_id: attrRenderID, quantity: count}


    $.ajax
      url: '/line_items'
      dataType: 'html'
      type: "POST"
      data: valuesToSubmit
      beforeSend: ->
        if itemToAdd.hasClass('not-product-pack')
          itemToAdd.children().remove()
          itemToAdd.append('<div class="status-adding">Добавляння...</div>')
      success: (data) ->
        if itemToRemove.hasClass('quantity-items-wrap')
          itemToRemove.remove()
        if itemToAdd.hasClass('not-product-pack')
          itemToAdd.children().remove()
          itemToAdd.append('<div class="status-adding">ТОВАР ВЖЕ В КОРЗИНІ!</div>')
          $('<label class="one-product-anchor-to-cart" for="modal_cart" id="basket">Переглянути</label>').insertAfter(itemToAdd)
          setCountItems(count)
        loadPartials()

        return

      complete: ->
        return

#  add product to cart
  $('.cart_items_list .delete-item').click (e) ->
    e.preventDefault()
    attrRenderID = $(this).attr('data-line-item-id')

    $.ajax
      url: '/line_items/'+attrRenderID
      dataType: 'html'
      type: "DELETE"
      beforeSend: ->
      success: (data) ->
        alert 'success'
      complete: ->
        alert "complete"

# add product pack items to cart
  $('.pd_product_pack_wrap button.cust_button').click ->
    $product_id = ""
    $product_quantity = ""
    $parent = $(this).closest('.pd_product_pack_wrap')
    $lis = $parent.find('.ppi_item_wrap')

    $produck_pack_id = $(this).attr 'data-product-pack-id'

    $tablecloth = $lis.filter('.pp-tablecloth-buy')
    $tableclothData = $tablecloth.attr 'data-product-id'
    $dirnkSet = $lis.filter('.pp-drink-set-buy')
    $drinkSetParent = $dirnkSet.parent().filter('.active')
    $drinkSetData = $drinkSetParent.children().attr 'data-product-id'
    if $dirnkSet.hasClass('one-item')
      $drinkSetData = $dirnkSet.attr 'data-product-id'

    $decors = $lis.filter('.pp-decor-buy')
    $decorsParent = $decors.parent().filter('.active')
    $decorsData = $decorsParent.children().attr 'data-product-id'
    if $decors.hasClass('one-item')
      $decorsData = $decors.attr 'data-product-id'

#    alert 'id комплекту - '+$produck_pack_id+'\n'+'id скатертини - '+$tableclothData+'\n'+'id чайного сервізу - '+$drinkSetData+'\n'+'id декору - '+$decorsData

    valuesToSubmit = {product_id: $product_id, quantity: $product_quantity, product_pack_id: $produck_pack_id, p_drink_set_id: $drinkSetData, p_tablecloth_id:$tableclothData, p_decor_id: $decorsData}

    $.ajax
      url: '/line_items'
      dataType: 'html'
      type: "POST"
      data: valuesToSubmit
      beforeSend: ->
        return
      success: (data) ->
        alert 'success'
        setCountItems(3)
        return

      complete: ->
        return

# ordering products
  $('ul#status-ico-wrap li').click ->
    current_position = $(this).index()
    $head_tabs = $(this).closest('ul#status-ico-wrap')
    $head_tabs_li = $head_tabs.find('li')
    $head_tabs_li.removeClass('active')
    $(this).addClass('active')

    $body_tabs_li = $('ul#status-tabs-wrap').find('li')

    $body_tabs_li.removeClass('active').addClass('hide')
    $body_tabs_li.eq(current_position).addClass('active').removeClass('hide')

# changed for select
  $('.ordering_wrap select').change ->
    changeValue = $(this).val()
#    alert 'change: '+ changeValue
    if changeValue == "Ukraine"
      if $('.new-post-wrap').hasClass('hide')
        $('.new-post-wrap').removeClass('hide')
    if changeValue == "Lviv"
      if $('.new-post-wrap').hasClass('hide')
      else
        $('.new-post-wrap').addClass('hide')

    if changeValue == "private" || changeValue == "in_terms_of"
      if $('.requisites-wrap').hasClass('hide')
        $('.requisites-wrap').removeClass('hide')
    if changeValue == "at_reception"
      if $('.requisites-wrap').hasClass('hide')
      else
        $('.requisites-wrap').addClass('hide')

#        next step ordering
  $('button#next-step-ordering').click ->
    currentHeaderTitle = $('.ordering_wrap .page-header-wrap h2').text()
    insertHeaderTitle = "Підтвердження замовлення"
    headerTitle = $('.ordering_wrap .page-header-wrap h2')
    prevStatusPage = $('li#ordering-prev-step')
    nextStatusPage = $('li#ordering-next-step')
#    alert 'we are!'
    if nextStatusPage.hasClass('hide')
      prevStatusPage.addClass('hide')
      nextStatusPage.removeClass('hide')
      headerTitle.text(insertHeaderTitle)

